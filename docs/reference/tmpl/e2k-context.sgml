<!-- ##### SECTION Title ##### -->
E2kContext

<!-- ##### SECTION Short_Description ##### -->
WebDAV connection to the Exchange server

<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#E2kAutoconfig, #E2kOperation, #E2kResult, #E2kProperties
</para>

<para>
The <link linkend="ximian-connector-E2kContextPrivate">private
E2kContext API</link>.
</para>

<!-- ##### STRUCT E2kContext ##### -->
<para>
#E2kContext manages the pool of WebDAV connections to the Exchange server.
</para>


<!-- ##### SIGNAL E2kContext::redirect ##### -->
<para>
Indicates that @e2kcontext has processed a redirection response. The
application can use this to update its records so that the correct URI
can be used automatically in the future.
</para>

@e2kcontext: the object which received the signal.
@arg1: the HTTP status code
@arg2: the originally-requested URI
@arg3: the URI @old_uri was redirected to

<!-- ##### FUNCTION e2k_context_new ##### -->
<para>

</para>

@uri: 
@Returns: 


<!-- ##### FUNCTION e2k_context_set_auth ##### -->
<para>

</para>

@ctx: 
@username: 
@domain: 
@authmech: 
@password: 


<!-- ##### FUNCTION e2k_context_get ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@content_type: 
@body: 
@len: 
@Returns: 


<!-- ##### FUNCTION e2k_context_get_owa ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@claim_ie: 
@body: 
@len: 
@Returns: 


<!-- ##### FUNCTION e2k_context_put ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@content_type: 
@body: 
@length: 
@repl_uid: 
@Returns: 


<!-- ##### FUNCTION e2k_context_post ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@content_type: 
@body: 
@length: 
@location: 
@repl_uid: 
@Returns: 


<!-- ##### FUNCTION e2k_context_proppatch ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@props: 
@create: 
@repl_uid: 
@Returns: 


<!-- ##### FUNCTION e2k_context_bproppatch_start ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@hrefs: 
@nhrefs: 
@props: 
@create: 
@Returns: 


<!-- ##### USER_FUNCTION E2kContextTestCallback ##### -->
<para>
Used by e2k_context_put_new() and e2k_context_proppatch_new(), qv.
</para>

@ctx: the context
@test_name: the object name to test the existence of
@user_data: user data that was passed along with the callback
@Returns: %TRUE if @test_name is available, %FALSE if it is in use.


<!-- ##### FUNCTION e2k_context_put_new ##### -->
<para>

</para>

@ctx: 
@op: 
@folder_uri: 
@object_name: 
@test_callback: 
@user_data: 
@content_type: 
@body: 
@length: 
@location: 
@repl_uid: 
@Returns: 


<!-- ##### FUNCTION e2k_context_proppatch_new ##### -->
<para>

</para>

@ctx: 
@op: 
@folder_uri: 
@object_name: 
@test_callback: 
@user_data: 
@props: 
@location: 
@repl_uid: 
@Returns: 


<!-- ##### FUNCTION e2k_context_propfind ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@props: 
@nprops: 
@results: 
@nresults: 
@Returns: 


<!-- ##### FUNCTION e2k_context_bpropfind_start ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@hrefs: 
@nhrefs: 
@props: 
@nprops: 
@Returns: 


<!-- ##### FUNCTION e2k_context_search_start ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@props: 
@nprops: 
@rn: 
@orderby: 
@ascending: 
@Returns: 


<!-- ##### FUNCTION e2k_context_delete ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@Returns: 


<!-- ##### FUNCTION e2k_context_bdelete_start ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@hrefs: 
@nhrefs: 
@Returns: 


<!-- ##### FUNCTION e2k_context_mkcol ##### -->
<para>

</para>

@ctx: 
@op: 
@uri: 
@props: 
@permanent_url: 
@Returns: 


<!-- ##### FUNCTION e2k_context_transfer_start ##### -->
<para>

</para>

@ctx: 
@op: 
@source_folder: 
@dest_folder: 
@source_hrefs: 
@delete_originals: 
@Returns: 


<!-- ##### FUNCTION e2k_context_transfer_dir ##### -->
<para>

</para>

@ctx: 
@op: 
@source_href: 
@dest_href: 
@delete_original: 
@permanent_url: 
@Returns: 


<!-- ##### ENUM E2kContextChangeType ##### -->
<para>
The kinds of change notification you can subscribe to on a folder.
</para>

@E2K_CONTEXT_OBJECT_CHANGED: Notification of any changes to the folder.
@E2K_CONTEXT_OBJECT_ADDED: Notification when objects are added to the folder.
@E2K_CONTEXT_OBJECT_REMOVED: Notification when objects are DELETEd
from the folder.
@E2K_CONTEXT_OBJECT_MOVED: Notification when objects are moved into or
out of the folder.

<!-- ##### USER_FUNCTION E2kContextChangeCallback ##### -->
<para>
The callback that is invoked when a subscription is triggered.
</para>

@ctx: the context
@uri: the URI for which a notification was received
@type: the type of notification (so you can use the same callback for
multiple subscription types)
@user_data: the data that was passed to e2k_context_subscribe()


<!-- ##### FUNCTION e2k_context_subscribe ##### -->
<para>

</para>

@ctx: 
@uri: 
@type: 
@min_interval: 
@callback: 
@user_data: 


<!-- ##### FUNCTION e2k_context_unsubscribe ##### -->
<para>

</para>

@ctx: 
@uri: 


